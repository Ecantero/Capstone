{"version":3,"sources":["./src/app/sign-up-page/sign-up-page.component.ts","./src/app/sign-up-page/sign-up-page.component.html","./src/environments/environment.ts","./src/app/home-page/home-page.component.ts","./src/app/home-page/home-page.component.html","./src/app/about-page/about-page.component.ts","./src/app/about-page/about-page.component.html","./src/app/job-listings-page/job-listings-page.component.ts","./src/app/job-listings-page/job-listings-page.component.html","./src/app/services/front-end.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/user-acc-page/user-acc-page.component.ts","./src/app/user-acc-page/user-acc-page.component.html","./src/app/user-result-page/user-result-page.component.ts","./src/app/user-result-page/user-result-page.component.html","./src/app/app-routing.module.ts","./src/app/search-page/search-page.component.ts","./src/app/search-page/search-page.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FrontEndService } from 'src/app/services/front-end.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sign-up-page',\n  templateUrl: './sign-up-page.component.html',\n  styleUrls: ['./sign-up-page.component.scss'],\n})\nexport class SignUpPageComponent implements OnInit {\n  static username: any;\n  static signIn: boolean = false;\n  static userEmp: boolean;\n  static userEmpr: boolean;\n\n  person = {\n    name: '',\n    age: 0,\n    email: '',\n    password: '',\n  };\n\n  employee = {\n    skills: [],\n  };\n  emp = false;\n\n  employer = {\n    company: '',\n  };\n  empr = false;\n\n  constructor(\n    private frontEndService: FrontEndService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    console.log(`signed in state: ${SignUpPageComponent.signIn}`);\n  }\n\n  isEmp(): void {\n    this.emp = true;\n    this.empr = false;\n  }\n\n  isEmpr(): void {\n    this.emp = false;\n    this.empr = true;\n  }\n\n  saveEmp(): void {\n    var empskl = this.employee.skills.toString();\n    var empSkills = empskl.split(', ');\n\n    SignUpPageComponent.username = this.person.name;\n    SignUpPageComponent.signIn = true;\n    SignUpPageComponent.userEmp = true;\n    SignUpPageComponent.userEmpr = false;\n\n    const data = {\n      name: this.person.name,\n      age: this.person.age,\n      email: this.person.email,\n      password: this.person.password,\n      skills: empSkills,\n    };\n    console.log(\n      `username: ${SignUpPageComponent.username}, \n      is Signed in: ${SignUpPageComponent.signIn}, \n      is employee: ${SignUpPageComponent.userEmp},\n      is employer: ${SignUpPageComponent.userEmpr}`\n    );\n    console.log(\n      `Employee name: ${data.name}, age: ${data.age}, email: ${data.email}, skills: ${data.skills}, password: ${data.password}`\n    );\n    this.frontEndService.createEmp(data).subscribe(\n      (response) => {\n        console.log(response);\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n    this.router.navigate(['/home']);\n  }\n\n  saveEmpr(): void {\n    SignUpPageComponent.username = this.person.name;\n    SignUpPageComponent.signIn = true;\n    SignUpPageComponent.userEmpr = true;\n    SignUpPageComponent.userEmp = false;\n\n    const data = {\n      name: this.person.name,\n      age: this.person.age,\n      email: this.person.email,\n      password: this.person.password,\n      company: this.employer.company,\n    };\n    console.log(\n      `username: ${SignUpPageComponent.username}, \n      is Signed in: ${SignUpPageComponent.signIn}, \n      is employee: ${SignUpPageComponent.userEmp},\n      is employer: ${SignUpPageComponent.userEmpr}`\n    );\n    console.log(data);\n    this.frontEndService.createEmpr(data).subscribe(\n      (response) => {\n        console.log(response);\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n    this.router.navigate(['/home']);\n  }\n}\n","<h1>sign-up-page works!</h1>\n\n<div>\n  <button type=\"button\" class=\"btn btn-info\" (click)=\"isEmp()\">Employee</button>\n  <button type=\"button\" class=\"btn btn-info\" (click)=\"isEmpr()\">\n    Employer\n  </button>\n</div>\n<div>\n  <div class=\"row mb-3\">\n    <label for=\"name\" class=\"col-sm-2 col-form-label\">Name</label>\n    <div class=\"col-sm-10\">\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        [(ngModel)]=\"person.name\"\n        name=\"name\"\n        required\n      />\n    </div>\n  </div>\n  <div class=\"row mb-3\">\n    <label for=\"age\" class=\"col-sm-2 col-form-label\">Age</label>\n    <div class=\"col-sm-10\">\n      <input\n        type=\"number\"\n        class=\"form-control\"\n        [(ngModel)]=\"person.age\"\n        name=\"age\"\n        required\n      />\n    </div>\n  </div>\n  <div class=\"row mb-3\">\n    <label for=\"email\" class=\"col-sm-2 col-form-label\">Email</label>\n    <div class=\"col-sm-10\">\n      <input\n        type=\"email\"\n        class=\"form-control\"\n        [(ngModel)]=\"person.email\"\n        name=\"email\"\n        required\n      />\n    </div>\n  </div>\n  <div class=\"row mb-3\">\n    <label for=\"password\" class=\"col-sm-2 col-form-label\">Password</label>\n    <div class=\"col-sm-10\">\n      <input\n        type=\"password\"\n        class=\"form-control\"\n        [(ngModel)]=\"person.password\"\n        name=\"password\"\n        required\n      />\n    </div>\n  </div>\n  <div *ngIf=\"emp\" class=\"row mb-3\">\n    <label for=\"skills\" class=\"col-sm-2 col-form-label\">Skills</label>\n    <div class=\"col-sm-10\">\n      <textarea\n        class=\"form-control\"\n        [(ngModel)]=\"employee.skills\"\n        name=\"skills\"\n        cols=\"30\"\n        rows=\"1\"\n        required\n      ></textarea>\n    </div>\n    <button (click)=\"saveEmp()\" class=\"btn btn-primary\">Sign up</button>\n  </div>\n  <div *ngIf=\"empr\" class=\"row mb-3\">\n    <label for=\"company\" class=\"col-sm-2 col-form-label\">Company</label>\n    <div class=\"col-sm-10\">\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        [(ngModel)]=\"employer.company\"\n        name=\"company\"\n        required\n      />\n    </div>\n    <button (click)=\"saveEmpr()\" class=\"btn btn-primary\">Sign up</button>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.scss']\n})\nexport class HomePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>home-page works!</h1>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about-page',\n  templateUrl: './about-page.component.html',\n  styleUrls: ['./about-page.component.scss']\n})\nexport class AboutPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>about-page works!</h1>\n","import { Component, OnInit } from '@angular/core';\nimport { FrontEndService } from '../services/front-end.service';\n\n@Component({\n  selector: 'app-job-listings-page',\n  templateUrl: './job-listings-page.component.html',\n  styleUrls: ['./job-listings-page.component.scss'],\n})\nexport class JobListingsPageComponent implements OnInit {\n  jobs: any;\n  title = '';\n\n  constructor(private frontEndService: FrontEndService) {}\n\n  ngOnInit(): void {\n    this.retrieveJobList();\n  }\n\n  retrieveJobList(): void {\n    this.frontEndService.getAllJobs().subscribe(\n      (data) => {\n        this.jobs = data;\n        console.log(data);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  \n  searchJob(): void {\n    this.frontEndService.findByJob(this.title).subscribe(\n      (data) => {\n        this.jobs = data;\n        console.log(data);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n}\n","<h1>job-listings-page works!</h1>\n\n<div class=\"d-flex\">\n  <input\n    class=\"form-control me-2\"\n    type=\"search\"\n    placeholder=\"Search\"\n    aria-label=\"Search\"\n    [(ngModel)]=\"title\"\n  />\n  <button\n    class=\"btn btn-outline-success\"\n    type=\"button\"\n    (click)=\"searchJob()\"\n  >\n    Search\n  </button>\n</div>\n\n<div class=\"container-fluid\">\n  <div class=\"col-md-6\">\n    <h4>Jobs Available</h4>\n    <div class=\"list-group\">\n      <div class=\"list-group-item\" *ngFor=\"let job of jobs; let i = index\">\n        <p>Title: {{ job.title }}</p>\n        <p><a>{{ job.name }}</a></p>\n        <p>Description: {{ job.desc }}</p>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst baseUrl = 'http://localhost:3000';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FrontEndService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  userLogin(data: any): Observable<any> {\r\n    return this.http.post(`${baseUrl}/login`, data);\r\n  }\r\n\r\n  getAll(): Observable<any> {\r\n    return this.http.get(`${baseUrl}/search`);\r\n  }\r\n\r\n  getAllJobs(): Observable<any> {\r\n    return this.http.get(`${baseUrl}/jobListings`)\r\n  }\r\n\r\n  get(id: any): Observable<any> {\r\n    return this.http.get(`${baseUrl}/user/${id}`);\r\n  }\r\n\r\n  findByName(name: any): Observable<any> {\r\n    return this.http.get(`${baseUrl}/search?name=${name}`);\r\n  }\r\n\r\n  findByJob(title: any): Observable<any>{\r\n    return this.http.get(`${baseUrl}/jobListings?title=${title}`);\r\n  }\r\n\r\n  createEmp(data: any): Observable<any> {\r\n    console.log(\"create employee method is called\");\r\n    console.log(`${baseUrl}/signUp/emp`);\r\n    console.log(`The data being sent to this url: ${data.name}`);\r\n    return this.http.post(`${baseUrl}/signUp/emp`, data);\r\n  }\r\n\r\n  createEmpr(data: any): Observable<any> {\r\n    console.log(\"create employer method is called\");\r\n    console.log(`${baseUrl}/signUp/empr`);\r\n    console.log(`The data being sent to this url: ${data.name}`);\r\n    return this.http.post(`${baseUrl}/signUp/empr`, data);\r\n  }\r\n\r\n  createJob(data: any): Observable<any> {\r\n    return this.http.post(`${baseUrl}/jobPost`, data);\r\n  }\r\n\r\n  update(id: any, data: any): Observable<any> {\r\n    return this.http.put(`${baseUrl}/edit/${id}`, data);\r\n  }\r\n\r\n  delete(id: any): Observable<any> {\r\n    return this.http.delete(`${baseUrl}/${id}`);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FrontEndService } from './services/front-end.service';\nimport { SignUpPageComponent } from './sign-up-page/sign-up-page.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  person = {\n    email: '',\n    password: '',\n  };\n\n  title = 'front-end';\n  signedIn = SignUpPageComponent.signIn;\n  msg = '';\n  err = false;\n\n  constructor(\n    private frontEndService: FrontEndService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    console.log(`is signed in: ${SignUpPageComponent.signIn}`);\n  }\n\n  login(): void {\n    console.log(\n      `user's email logging in: ${this.person.email}, password: ${this.person.password}`\n    );\n    const data = {\n      email: this.person.email,\n      password: this.person.password,\n    };\n\n    this.frontEndService.userLogin(data).subscribe(\n      (person: any) => {\n        console.log(person);\n        if (person.msg != '') {\n          this.err = true;\n          this.msg = person.msg;\n        }\n        this.err = false;\n        this.signedIn = true;\n        console.log('err: ' + this.err);\n        this.router.navigate([`/userAcc/${person.id}`]);\n      },\n      (err: any) => {\n        console.log(err);\n        this.err = true;\n        this.msg = 'No such user exists';\n      }\n    );\n  }\n}\n","<div>\n  <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand\" href=\"#\">Job Find</a>\n      <button\n        class=\"navbar-toggler\"\n        type=\"button\"\n        data-bs-toggle=\"collapse\"\n        data-bs-target=\"#capstoneNavbar\"\n        aria-controls=\"capstoneNavbar\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"capstoneNavbar\">\n        <div class=\"navbar-nav\">\n          <a class=\"nav-link\" routerLink=\"home\">Home</a>\n          <a class=\"nav-link\" routerLink=\"about\">About</a>\n          <a class=\"nav-link\" routerLink=\"jobListings\">Job Listings</a>\n          <a class=\"nav-link\" routerLink=\"search\">Search</a>]\n          <div *ngIf=\"signedIn; else logIn\">\n            <a class=\"nav-link\" routerLink=\"userAcc\">User Account</a>\n          </div>\n          <ng-template #logIn>\n            <a class=\"nav-link\" routerLink=\"signUp\">Sign up</a>\n            <button\n              type=\"button\"\n              class=\"btn btn-primary\"\n              data-bs-toggle=\"modal\"\n              data-bs-target=\"#loginModal\"\n            >\n              Login\n            </button>\n            <div\n              class=\"modal fade\"\n              id=\"loginModal\"\n              tabindex=\"-1\"\n              aria-labelledby=\"loginLabel\"\n              aria-hidden=\"true\"\n            >\n              <div class=\"modal-dialog\">\n                <div class=\"modal-content\">\n                  <div class=\"modal-header\">\n                    <h5 class=\"modal-title\" id=\"loginLabel\">\n                      Login to your account\n                    </h5>\n                    <button\n                      type=\"button\"\n                      class=\"btn-close\"\n                      data-bs-dismiss=\"modal\"\n                      aria-label=\"Close\"\n                    ></button>\n                  </div>\n                  <div class=\"modal-body\">\n                    <div class=\"row mb-3\">\n                      <label for=\"email\" class=\"col-sm-2 col-form-label\"\n                        >Email</label\n                      >\n                      <div class=\"col-sm-10\">\n                        <input\n                          type=\"email\"\n                          class=\"form-control\"\n                          [(ngModel)]=\"person.email\"\n                          name=\"email\"\n                          required\n                        />\n                      </div>\n                    </div>\n                    <div class=\"row mb-3\">\n                      <label for=\"password\" class=\"col-sm-2 col-form-label\"\n                        >Password</label\n                      >\n                      <div class=\"col-sm-10\">\n                        <input\n                          type=\"password\"\n                          class=\"form-control\"\n                          [(ngModel)]=\"person.password\"\n                          name=\"password\"\n                          required\n                        />\n                      </div>\n                    </div>\n                    <div *ngIf=\"err\" class=\"row mb-3\">\n                      <p class=\"text-danger\">\n                        {{ msg }}\n                      </p>\n                    </div>\n                  </div>\n                  <div class=\"modal-footer\">\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-secondary\"\n                      data-bs-dismiss=\"modal\"\n                    >\n                      Close\n                    </button>\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-primary\"\n                      (click)=\"login()\"\n                    >\n                      Login\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </ng-template>\n        </div>\n      </div>\n    </div>\n  </nav>\n\n  <div class=\"container\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { SignUpPageComponent } from './sign-up-page/sign-up-page.component';\nimport { AboutPageComponent } from './about-page/about-page.component';\nimport { SearchPageComponent } from './search-page/search-page.component';\nimport { UserAccPageComponent } from './user-acc-page/user-acc-page.component';\nimport { JobListingsPageComponent } from './job-listings-page/job-listings-page.component';\nimport { FormsModule } from \"@angular/forms\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { UserResultPageComponent } from './user-result-page/user-result-page.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomePageComponent,\n    SignUpPageComponent,\n    AboutPageComponent,\n    SearchPageComponent,\n    UserAccPageComponent,\n    JobListingsPageComponent,\n    UserResultPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FrontEndService } from 'src/app/services/front-end.service';\nimport { SignUpPageComponent } from '../sign-up-page/sign-up-page.component';\n\n@Component({\n  selector: 'app-user-acc-page',\n  templateUrl: './user-acc-page.component.html',\n  styleUrls: ['./user-acc-page.component.scss'],\n})\nexport class UserAccPageComponent implements OnInit {\n  user: any;\n  name = SignUpPageComponent.username;\n  isEmployee = SignUpPageComponent.userEmp;\n  isEmployer = SignUpPageComponent.userEmpr;\n  msg = '';\n  complete = false;\n  id = this.route.snapshot.paramMap.get('id');\n\n  job = {\n    title: '',\n    name: '',\n    desc: '',\n  };\n\n  person = {\n    name: '',\n    age: 0,\n    email: '',\n    password: '',\n  };\n\n  emp = {\n    company: '',\n  }\n\n  constructor(\n    private frontEndService: FrontEndService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.retrievePerson(this.id);\n    console.log(this.id);\n    this.isEmployer = true;\n    console.log(this.isEmployer);\n  }\n\n  retrievePerson(id: any): void {\n    this.frontEndService.get(id).subscribe(\n      (data) => {\n        this.user = data;\n        console.log(data);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  updateUser(): void {\n    const data = {\n      name: this.person.name,\n      email: this.person.email,\n      password: this.person.password,\n      age: this.person.age,\n      company: this.emp.company,\n    }\n  }\n\n  postJob(): void {\n    const data = {\n      title: this.job.title,\n      name: this.job.name,\n      desc: this.job.desc,\n    };\n    this.frontEndService.createJob(data).subscribe(\n      (response) => {\n        console.log(response);\n        this.msg = \"job posted\";\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n}\n","<p>user-acc-page works!</p>\n\n<div>\n  hello\n  <p for=\"name\">Name: {{ user.name }}</p>\n  <p for=\"email\">Email: {{ user.email }}</p>\n  <p for=\"age\">Age: {{ user.age }}</p>\n  <div *ngIf=\"isEmployee\">\n    <p for=\"skills\">Skills: {{ user.skills }}</p>\n  </div>\n  <div *ngIf=\"isEmployer\">\n    <p for=\"company\">Company: {{ user.company }}</p>\n  </div>\n  <button\n    type=\"button\"\n    class=\"btn btn-primary\"\n    data-bs-toggle=\"modal\"\n    data-bs-target=\"#editModal\"\n  >\n    Edit\n  </button>\n  <div\n    class=\"modal fade\"\n    id=\"editModal\"\n    tabindex=\"-1\"\n    aria-labelledby=\"editLabel\"\n    aria-hidden=\"true\"\n  >\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"editLabel\">Edit your account</h5>\n          <button\n            type=\"button\"\n            class=\"btn-close\"\n            data-bs-dismiss=\"modal\"\n            aria-label=\"Close\"\n          ></button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"row mb-3\">\n            <label for=\"name\" class=\"col-sm-2 col-form-label\">Name</label>\n            <div class=\"col-sm-10\">\n              <input type=\"text\" ([ngModel])=\"(person.name)\" />\n            </div>\n          </div>\n          <div class=\"row mb-3\">\n            <label for=\"age\" class=\"col-sm-2 col-form-label\">Age</label>\n            <div class=\"col-sm-10\">\n              <input type=\"number\" ([ngModel])=\"(person.age)\" />\n            </div>\n          </div>\n          <div class=\"row mb-3\">\n            <label for=\"email\" class=\"col-sm-2 col-form-label\">Email</label>\n            <div class=\"col-sm-10\">\n              <input type=\"email\" ([ngModel])=\"(person.email)\" />\n            </div>\n          </div>\n          <div class=\"row mb-3\">\n            <label for=\"password\" class=\"col-sm-2 col-form-label\"\n              >password</label\n            >\n            <div class=\"col-sm-10\">\n              <input type=\"password\" ([ngModel])=\"(person.password)\" />\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\"></div>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"isEmployer\">\n    <div>\n      <h2>Create a new job post</h2>\n      <div class=\"mb-3 row\">\n        <label for=\"title\" class=\"col-sm-2 col-form-label\">Title</label>\n        <div class=\"col-sm-10\">\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            [(ngModel)]=\"job.title\"\n            name=\"title\"\n            required\n          />\n        </div>\n      </div>\n      <div class=\"mb-3 row\">\n        <label for=\"desc\" class=\"col-sm-2 col-form-label\">description</label>\n        <div class=\"col-sm-10\">\n          <textarea\n            class=\"form-control\"\n            [(ngModel)]=\"job.desc\"\n            name=\"desc\"\n            cols=\"30\"\n            rows=\"1\"\n            required\n          ></textarea>\n        </div>\n      </div>\n      <p [(ngModel)]=\"job.name\" hidden>{{ user.name }}</p>\n      <button (click)=\"postJob()\" class=\"btn btn-primary\">Post Job</button>\n      <p *ngIf=\"complete\">{{ msg }}</p>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FrontEndService } from '../services/front-end.service';\n\n@Component({\n  selector: 'app-user-result-page',\n  templateUrl: './user-result-page.component.html',\n  styleUrls: ['./user-result-page.component.scss'],\n})\nexport class UserResultPageComponent implements OnInit {\n  userData: any;\n  msg = '';\n\n  constructor(\n    private frontEndService: FrontEndService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.msg = '';\n    this.getUser(this.route.snapshot.paramMap.get('id'));\n  }\n\n  getUser(id: any): void{\n    this.frontEndService.get(id)\n    .subscribe(data => {\n      this.userData = data;\n      console.log(data);\n    },\n    err => {\n      console.log(err);\n    });\n  }\n}\n","<p>user-result-page works!</p>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AboutPageComponent } from './about-page/about-page.component';\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { JobListingsPageComponent } from './job-listings-page/job-listings-page.component';\nimport { SearchPageComponent } from './search-page/search-page.component';\nimport { SignUpPageComponent } from './sign-up-page/sign-up-page.component';\nimport { UserAccPageComponent } from './user-acc-page/user-acc-page.component';\nimport { UserResultPageComponent } from './user-result-page/user-result-page.component';\n\nconst routes: Routes = [\n  {path: '', redirectTo: 'home', pathMatch: 'full'},\n  {path: 'home', component: HomePageComponent},\n  {path: 'about', component: AboutPageComponent},\n  {path: 'jobListings', component: JobListingsPageComponent},\n  {path: 'signUp', component: SignUpPageComponent},\n  {path: 'search', component: SearchPageComponent},\n  {path: 'userAcc/:id', component: UserAccPageComponent},\n  {path: 'user/:id', component: UserResultPageComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FrontEndService } from 'src/app/services/front-end.service';\n\n@Component({\n  selector: 'app-search-page',\n  templateUrl: './search-page.component.html',\n  styleUrls: ['./search-page.component.scss'],\n})\nexport class SearchPageComponent implements OnInit {\n  people: any;\n  name = '';\n\n  constructor(private frontEndService: FrontEndService) {}\n\n  ngOnInit(): void {\n    this.retrievePeople();\n  }\n\n  retrievePeople(): void {\n    this.frontEndService.getAll().subscribe(\n      (data: any) => {\n        this.people = data;\n        console.log(data);\n      },\n      (error: any) => {\n        console.log(error);\n      }\n    );\n  }\n\n  searchPerson(): void {\n    this.frontEndService.findByName(this.name).subscribe(\n      (data) => {\n        this.people = data;\n        console.log(data);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n}\n","<h1>search-page works!</h1>\n\n<div class=\"d-flex\">\n  <input\n    class=\"form-control me-2\"\n    type=\"search\"\n    placeholder=\"Search\"\n    aria-label=\"Search\"\n    [(ngModel)]=\"name\"\n  />\n  <button\n    class=\"btn btn-outline-success\"\n    type=\"button\"\n    (click)=\"searchPerson()\"\n  >\n    Search\n  </button>\n</div>\n\n<div class=\"container-fluid\">\n  <div class=\"col-md-6\">\n    <h4>Employees looking for hire</h4>\n    <div class=\"list-group\">\n      <div class=\"list-group-item\" *ngFor=\"let person of people; let i = index\">\n        <p>Name: {{ person.name }}</p>\n        <p>email: {{ person.email }}</p>\n        <p>age: {{ person.age }}</p>\n        <p>Skill Sets: {{ person.skills }}</p>\n      </div>\n    </div>\n  </div>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}